{
  "name": "rox-vpn-api",
  "version": "1.0.0",
  "description": "ROX VPN Server Status API - Backend service for monitoring VPN server status and providing real-time data",
  "main": "./server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:integration": "jest --testPathPattern=integration",
    "lint": "eslint src/",
    "lint:fix": "eslint src/ --fix",
    "format": "prettier --write src/",
    "format:check": "prettier --check src/",
    "security:audit": "npm audit",
    "security:fix": "npm audit fix",
    "clean": "rm -rf logs/*.log",
    "logs": "tail -f logs/combined.log",
    "pm2:start": "pm2 start ecosystem.config.js",
    "pm2:stop": "pm2 stop rox-vpn-api",
    "pm2:restart": "pm2 restart rox-vpn-api",
    "pm2:logs": "pm2 logs rox-vpn-api",
    "pm2:status": "pm2 status",
    "validate": "npm run lint && npm run format:check && npm test"
  },
  "keywords": [
    "vpn",
    "api",
    "server-status",
    "monitoring",
    "express",
    "nodejs",
    "telegram-bot"
  ],
  "author": "Antonio Panuchi <antonio@example.com>",
  "license": "ISC",
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/AntonioPanuchi/newFrontLanding.git"
  },
  "bugs": {
    "url": "https://github.com/AntonioPanuchi/newFrontLanding/issues"
  },
  "homepage": "https://github.com/AntonioPanuchi/newFrontLanding#readme",
  "dependencies": {
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-rate-limit": "^6.10.0",
    "ping": "^0.4.4",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^4.7.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.30.1",
    "eslint": "^9.30.1",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-node": "^11.1.0",
    "jest": "^30.0.4",
    "nodemon": "^3.1.10",
    "prettier": "^3.2.5",
    "supertest": "^7.0.0"
  },
  "jest": {
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "server.js",
      "routes/**/*.js",
      "controllers/**/*.js",
      "utils/**/*.js"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ]
  }
}
